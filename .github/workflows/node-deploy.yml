name: AWS DEPLOY TO STAGING
# turn off deploy to AWS

on:
  pull_request:
    types: [closed]
    branches:
      - dev

jobs:
  aws-deploy:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.AWS_DB_HOST }}
      DB_PW: ${{ secrets.AWS_DB_PW}}
      DB_USER: ${{ secrets.AWS_DB_USER }}
      DB_NAME: ${{ secrets.AWS_DB_NAME }}
      SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      CLIENT_ID: ${{secrets.CLIENT_ID}}
      CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
      SENDGRID_API_KEY: ${{secrets.SENDGRID_API_KEY}}
      FRONTEND_URL: "http://ec2-3-137-88-25.us-east-2.compute.amazonaws.com/travel-frontend"
    steps:
      - uses: actions/checkout@v2
        with:
          ref: dev
          node-version: 16
      - uses: actions/setup-node@v3
        #May need to change to version 18
        with:
          node-version: 16
      - run: npm install

      - run: |
          touch .env
          echo DB_HOST = "$DB_HOST" >> .env
          echo DB_PW = "$DB_PW" >> .env
          echo DB_USER = "$DB_USER" >> .env
          echo DB_NAME = "$DB_NAME" >> .env
          echo SECRET_KEY = "$SECRET_KEY" >> .env
          echo CLIENT_ID = "$CLIENT_ID" >> .env
          echo CLIENT_SECRET = "$CLIENT_SECRET" >> .env
          echo SENDGRID_API_KEY = "$SENDGRID_API_KEY'" > .env
          echo FRONTEND_URL = "$FRONTEND_URL'" > .env

      - run: npm run bundle

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "deploy/"
          REMOTE_HOST: "ec2-3-137-88-25.us-east-2.compute.amazonaws.com"
          REMOTE_USER: ubuntu
          TARGET: "nodeapps/travel-backend"
      - name: Execute SSH commmands on remote server
        uses: JimCronqvist/action-ssh@master
        env:
          NAME: "Root"
        with:
          hosts: "ubuntu@ec2-3-137-88-25.us-east-2.compute.amazonaws.com"
          privateKey: ${{ secrets.SERVER_SSH_KEY }}
          debug: false
          command: |
            cd nodeapps/travel-backend
            npm install
            sudo systemctl stop travel-backend
            sudo cp travel-backend.service /lib/systemd/system/travel-backend.service
            sudo systemctl daemon-reload
            sudo systemctl start travel-backend
